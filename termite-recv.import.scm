;;;; termite-recv.import.scm - GENERATED BY CHICKEN 4.8.0.5 -*- Scheme -*-

(eval '(import
         chicken
         scheme
         srfi-1
         srfi-4
         srfi-18
         mailbox
         mailbox-threads
         tcp
         extras
         posix
         ports
         defstruct
         (prefix lookup-table chicken:)
         (prefix s11n s11n:)))
(##sys#register-compiled-module
  'termite-recv
  (list)
  '()
  (list (cons 'recv
              (##sys#er-transformer
                (##core#lambda
                  (x r c)
                  (let ((clauses (cdr x))
                        (%msg (r 'msg))
                        (%loop (r 'loop))
                        (%with-exception-handler (r 'with-exception-handler))
                        (%lambda (r 'lambda))
                        (%mailbox-timeout-exception?
                          (r 'mailbox-timeout-exception?))
                        (%begin (r 'begin))
                        (%thread-mailbox-rewind (r 'thread-mailbox-rewind))
                        (%thread-mailbox-extract-and-rewind
                          (r 'thread-mailbox-extract-and-rewind))
                        (%thread-mailbox-next (r 'thread-mailbox-next))
                        (%handle-exception-message
                          (r 'handle-exception-message))
                        (%match/action (r 'match/action))
                        (%raise (r 'raise))
                        (%event (r 'event))
                        (%termite-exception? (r 'termite-exception?))
                        (%if (r 'if))
                        (%let (r 'let)))
                    (let ((sesualc (reverse clauses)))
                      (if (and (pair? (car sesualc))
                               (eq? (caar sesualc) 'after))
                        (let ((clauses (reverse (cdr sesualc)))
                              (init (cadar sesualc))
                              (timeout (r 'timeout))
                              (on-timeout (cddar sesualc))
                              (%e (r 'e)))
                          `(,%let
                            ((,timeout ,init))
                            (,%with-exception-handler
                             (,%lambda
                              (,%e)
                              (,%if
                               (,%mailbox-timeout-exception? ,%e)
                               (,%begin (,%thread-mailbox-rewind) ,@on-timeout)
                               (,%raise ,%e)))
                             (,%lambda
                              ()
                              (,%let
                               ,%loop
                               ((,%msg (,%thread-mailbox-next ,timeout)))
                               (,%match/action
                                (,%thread-mailbox-extract-and-rewind)
                                (,%loop (,%thread-mailbox-next ,timeout))
                                ,%msg
                                (,%event
                                 (where (,%termite-exception? ,%event))
                                 (,%handle-exception-message ,%event))
                                ,@clauses))))))
                        `(,%let
                          ,%loop
                          ((,%msg (,%thread-mailbox-next)))
                          (,%match/action
                           (,%thread-mailbox-extract-and-rewind)
                           (,%loop (,%thread-mailbox-next))
                           ,%msg
                           (,%event
                            (where (,%termite-exception? ,%event))
                            (,%handle-exception-message ,%event))
                           ,@clauses)))))))))
  (list))

;; END OF FILE
